#!/bin/bash
usage="Shifts time over a gif

Usage: timerelapser [-options] source.gif|source/

Where options can be
-h		show this help
-v		verbose
-slices <int>	shorten the slices (in exchange for vertical resolution)
-o output/	set output folder, defaults to source output without .gif extension
-g <delay>	Make a GIF named as <output>_timerelapsed.gif, 5 == 50ms" 

vflag='no'
sflag='no'
aflag='no'
slices=0
output='output/'
gflag='no'
while getopts "ahvs:o:g:" opt; do
	case $opt in
		h)
			echo "$usage">&2
			exit 1
			;;
		v)
			vflag='yes'
			;;
		s)	
			sflag='yes'
			slices=$OPTARG
			;;
		g)	
			gflag='yes'
			delay=$OPTARG
			;;
		a)
			aflag='yes'
			;;
		o)
			output=$OPTARG
			clean="${output::-1}"
			;;
		:)
			echo "Option -$OPTARG requires an argument." >&2
			exit 1
			;;
	esac
done

shift $(expr $OPTIND - 1 )

source=$1
if [ $output = "output/" ]; then
	if [[ -f $source ]]; then
		output="${source::-4}"/
		clean="${source::-4}"
	elif [[ -d $source ]]; then
		echo "You need to select an explicit output folder when using folder as source"
		exit 1
	fi
fi

if [ $vflag = yes ]; then
	echo "Source: $source"	
	echo "Output: $output"
	if [ $gflag = yes ]; then
		echo "Gif: ${clean}_timerelapsed.gif"
	fi
fi

rm -rf _timerelapser_temp_dir_/
mkdir -p _timerelapser_temp_dir_/singles

if [ ! -d $output ]; then
    mkdir -p $output
fi

if [ $vflag = yes ]; then
	echo "Spliting..."
fi

if [[ -d $source ]]; then
	cp $source/*.png _timerelapser_temp_dir_/singles/
elif [[ -f $source ]]; then
	convert -coalesce $source -colorspace sRGB -alpha on PNG32:_timerelapser_temp_dir_/singles/%03d.png
fi

cp _timerelapser_temp_dir_/singles/*.png $output

frames=$(ls -1 _timerelapser_temp_dir_/singles/| wc -l)
lt_frames=$(expr $frames - 1)
height=$(identify -format "%H" _timerelapser_temp_dir_/singles/001.png)

if [ $sflag = no ]; then
	slices=$frames
fi

slice_height=$(expr $height / $slices)

if [ $vflag = yes ]; then
	echo "Frames: $frames"
	echo "Height: $height"
	echo "Slice Height: $slice_height"
	echo "Slices: $slices"
fi

if [ $vflag = yes ]; then
	echo "Processing..."
fi
start=`date +%s`

timeshifter _timerelapser_temp_dir_/singles/ $output $frames $slices

end=`date +%s`
runtime=$((end-start))
echo "Time elapsed ${runtime}secs"

#cleans all
rm -rf _timerelapser_temp_dir_/ 
beep
notify-send "Timerelapser Finished"

if [ $aflag = yes ]; then
	animate -delay 5 $output/*.png
fi

if [ $gflag = yes ]; then
	echo "Generating gif..."
	convert -delay $delay -loop 0 $output/*.png "${clean}_timerelapsed.gif"
	eog "${clean}_timerelapsed.gif"
fi